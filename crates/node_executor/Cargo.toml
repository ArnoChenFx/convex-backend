[package]
name = "node_executor"
version = "0.1.0"
edition = "2021"
license = "LicenseRef-FSL-1.1-Apache-2.0"

[lib]
doctest = false

[features]
testing = [
    "common/testing",
    "errors/testing",
    "isolate/testing",
    "keybroker/testing",
    "metrics/testing",
    "model/testing",
    "storage/testing",
    "value/testing",
    "udf/testing",
]

[dependencies]
anyhow = { workspace = true }
async-once-cell = { workspace = true }
async-trait = { workspace = true }
cmd_util = { path = "../cmd_util" }
common = { path = "../common" }
errors = { path = "../errors" }
fastrace = { workspace = true }
futures = { workspace = true }
futures-async-stream = { workspace = true }
home = { workspace = true }
http = { workspace = true }
isolate = { path = "../isolate" }
keybroker = { path = "../keybroker" }
maplit = { workspace = true }
metrics = { path = "../metrics" }
model = { path = "../model" }
portpicker = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
serde = { workspace = true }
serde_json = { workspace = true }
sourcemap = { workspace = true }
storage = { path = "../storage" }
sync_types = { package = "convex_sync_types", path = "../convex/sync_types" }
tempfile = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }
udf = { path = "../udf" }
value = { path = "../value" }

[build-dependencies]
anyhow = "1"

[dev-dependencies]
common = { path = "../common", features = ["testing"] }
convex_macro = { path = "../convex_macro" }
errors = { path = "../errors", features = ["testing"] }
isolate = { path = "../isolate", features = ["testing"] }
keybroker = { path = "../keybroker", features = ["testing"] }
maplit = { workspace = true }
metrics = { path = "../metrics", features = ["testing"] }
model = { path = "../model", features = ["testing"] }
runtime = { path = "../runtime", features = ["testing"] }
storage = { path = "../storage", features = ["testing"] }
tempfile = { workspace = true }
udf = { path = "../udf", features = ["testing"] }
value = { path = "../value", features = ["testing"] }

[lints]
workspace = true
